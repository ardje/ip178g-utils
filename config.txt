P2 - eth1
P1 - eth2
P0 - eth3


Port detection algo:
S0=Scan ports on link status.
Change eee settings to off
S1=Scan ports on link status.
Change eee settings to on
S2=Scan ports on link status.

If S0==S2 and S1 shows a single port that is down-> that port is the interface.
In any other case: repeat until failurecount

If any of the other ports are down, we are stuck?


Configuration scanning:

Once we know on which port we are, we can lock ourself in a seperate vlan, and start snooping traffic:

For all ports that are not our link port:
  - select our port as mirror target
  - select the port as mirror source
  - sniff traffic for up to 10s?
  - turn off mirroring


vlan configuration:
 phy 23:
0:15 write 1 == VLAN_TABLE_CLR
0:13 UNVID_MODE 0, discard, 1 flood. Unknown vlan?

1:[15..8] bitfield port: VLAN_CLS 0 -> use tag, 1 -> ignore tag use PVID ("Q" in Q?)
1:[7...0] bitfield port: TAG_VLAN_EN -> tag vlan enable
vlan ingress:
2:13 VLAN_DROP_CFI -> drop packets with 802.1Q EDI bit set 



phy 24
vlan nrs:
phy24.0 VLAN_VALID
phy24.1..16 vid
phy24.17..20 members

{ valid=true,vid=...,members={ ....} },
{ }


P0={ pvid=...,vlanfilter=true/false, pbv={..
